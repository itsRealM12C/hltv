:root {
    --primary-color: #00bcd4; /* Default cyan (little bit dark) */
    --primary-text-color: #1a1a1a;
    --main-font-family: sans-serif; /* New font variable */
    /* NEW GUI Scaling Variables */
    --scale-factor: 1.0; 
    --base-font-size: 16px;
    
    /* NEW Caption Style Variables */
    --caption-text-color: #ffffff;
    --caption-bg-color: #000000; /* This will be overridden by RGBA in JS but kept as solid default */
    --caption-font-family: sans-serif;
    --caption-text-opacity: 1; /* 0 to 1 */
    --caption-bg-opacity: 0.8; /* 0 to 1 */
    --caption-text-shadow: none; /* For outline, shadow, glow */
    /* NEW Size and Position Variables */
    --caption-font-size: 1.2rem;
    --caption-position-vertical: end; /* 'start', 'center', 'end' */
}

body {
    font-family: var(--main-font-family); /* Use new variable */
    margin: 0;
    padding: 0;
    background-color: #1a1a1a;
    color: #fff;
    display: flex;
    flex-direction: column;
    align-items: center;
    min-height: 100vh;
    font-size: calc(var(--base-font-size) * var(--scale-factor)); /* Apply scale */
}

/* Base element sizing needs to use EM or REM for scaling, but for robust scaling 
   across the layout, we adjust margins/paddings based on the scale factor as well. 
   Using calc() on font-size is the easiest global way. */

header {
    background-color: #333;
    width: 100%;
    text-align: center;
    padding: calc(10px * var(--scale-factor)) 0; /* Apply scale factor */
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.5);
}

h1 {
    margin: 0;
    color: var(--primary-color); /* Use variable */
    font-size: 1.5em; /* Use relative units */
}

/* Navigation Tabs */
#main-nav {
    margin-top: calc(10px * var(--scale-factor));
    display: flex;
    justify-content: center;
}

.nav-button {
    background-color: #555;
    color: white;
    border: none;
    padding: calc(10px * var(--scale-factor)) calc(20px * var(--scale-factor));
    cursor: pointer;
    font-size: 1em;
    transition: background-color 0.3s;
    margin: 0 calc(5px * var(--scale-factor));
    border-radius: 4px;
}

.nav-button:hover {
    background-color: #666;
}

.nav-button.active {
    background-color: var(--primary-color); /* Use variable */
    color: var(--primary-text-color); /* Use variable */
}

/* New focus style for keyboard navigation */
.focusable:focus,
.channel-button:focus,
.nav-button:focus,
.recording-actions button:focus,
.capture-actions button:focus {
    outline: 3px solid yellow; /* Bright indicator */
    box-shadow: 0 0 10px yellow;
    transition: box-shadow 0.1s, transform 0.1s; /* Added transform transition */
    transform: scale(1.05); /* Slight scale up on focus */
}

/* Add active state for button press animation */
.focusable:active,
.channel-button:active,
.nav-button:active,
.recording-actions button:active,
.capture-actions button:active {
    transform: scale(0.95); /* Slight scale down on press */
    box-shadow: 0 0 5px rgba(255, 255, 0, 0.5);
}

/* Ensure default state has transitions */
button, .channel-button, .nav-button, .recording-controls button {
    transition: background-color 0.2s, box-shadow 0.1s, transform 0.1s;
}

/* --- WebKit/Browser Default Overrides (Removing 'webkit blue overlay stuff') --- */
/* Disable default tap highlight color on mobile WebKit browsers */
body, button, .focusable {
    -webkit-tap-highlight-color: transparent;
}
/* Ensure standard focus outline is used instead of browser defaults */
button, input, textarea, select, .focusable, .guide-channel-entry, .guide-program {
    -webkit-appearance: none; /* Remove default WebKit styling for controls */
}
/* Ensure text selection is managed if needed, but primarily focusing on controls */
::selection {
    background: #00bcd4;
    color: #1a1a1a;
}
/* Remove blue highlight when hovering/clicking links or elements on iOS */
a, button, .channel-button, .nav-button {
    -webkit-touch-callout: none;
    -webkit-user-select: none;
}

/* --- Chooser/Picker UI Style (Select/Input) (NEW) --- */
/* Targetting select and text/number inputs inside main content (settings/modals) */
#main-content select, 
#main-content input[type="text"], 
#main-content input[type="number"],
#main-content input[type="range"] {
    background-color: #444;
    color: white;
    border: 1px solid #666;
    padding: calc(8px * var(--scale-factor)) calc(12px * var(--scale-factor));
    border-radius: 4px;
    font-size: 1em;
    box-sizing: border-box;
    cursor: pointer;
    transition: background-color 0.2s, border-color 0.2s;
}

#main-content select:hover, 
#main-content input[type="text"]:hover, 
#main-content input[type="number"]:hover {
    background-color: #555;
    border-color: var(--primary-color);
}

/* Specific styling for select dropdown icon on webkit */
#main-content select {
    /* Remove default arrow */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;
    /* Add custom caret icon */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='%23ffffff' d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z'/%3E%3C/svg%3E");
    background-repeat: no-repeat;
    background-position: right 10px center;
    padding-right: 30px; /* Space for the icon */
    min-width: 150px;
}

/* Focus styles inherited from .focusable:focus will apply the yellow outline */

#main-content {
    padding: 20px;
    flex-grow: 1;
    width: 100%;
    max-width: 800px;
    box-sizing: border-box;
}

.view.hidden {
    display: none;
}

.channel-list {
    display: flex;
    flex-direction: column;
    gap: 10px;
}

.channel-button {
    background-color: var(--primary-color); /* Use variable */
    color: var(--primary-text-color); /* Use variable */
    border: none;
    padding: calc(15px * var(--scale-factor));
    font-size: 1.2em;
    cursor: pointer;
    border-radius: 5px;
    text-align: left;
    transition: background-color 0.3s, transform 0.1s, box-shadow 0.1s; /* Added transitions */
}

.channel-button:hover {
    background-color: var(--primary-color); /* Use variable */
    filter: brightness(0.9); /* Slightly darker on hover */
}

/* Guide View Styles */
/* Guide Overlay in Player */
#guide-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1005; /* Above video, below player UI */
    background-color: rgba(0, 0, 0, 0.7); /* Transparent background to see video */
    display: flex;
    flex-direction: column;
    padding-top: 40px; /* Space for the header/back button */
    box-sizing: border-box;
}

#guide-overlay.hidden {
    display: none;
}

.guide-header {
    flex-shrink: 0;
    padding: 5px 20px;
    background-color: rgba(0, 0, 0, 0.8);
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    box-sizing: border-box;
    z-index: 1015;
    /* Added alignment for clock */
    display: flex;
    justify-content: space-between;
    align-items: center;
}

.guide-header:hover {
    background-color: #777;
}

#guide-real-time-clock {
    font-size: 1.1em;
    font-weight: bold;
    color: white;
}

#guide-back-button {
    background-color: #555;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9em;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Added transitions */
}

#guide-back-button:hover {
    background-color: #777;
}

.guide-container {
    display: flex;
    background-color: transparent; 
    border-radius: 0;
    height: 100%; 
    flex-grow: 1;
    overflow: hidden; /* Prevent guide-container itself from scrolling */
}

.guide-sidebar {
    flex-shrink: 0;
    width: 180px; /* Increased width for channel names */
    background-color: rgba(51, 51, 51, 0.9); /* Semi-transparent sidebar */
    border-right: 1px solid #444;
    overflow-y: scroll;
    height: 100%;
    /* 1. Add padding top to align channel names with program rows,
          to account for the fixed time header height (35px) */
    padding-top: 35px; 
    box-sizing: border-box; /* Ensure padding is included in the 100% height */
}

.guide-channel-entry {
    padding: 10px 10px;
    border-bottom: 1px solid #444;
    font-size: 0.9em;
    font-weight: bold;
    cursor: pointer;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Added transitions */
    outline: none; /* Focus handled by .focusable:focus */
    height: 50px; /* Fixed height for alignment with timeline rows */
    display: flex;
    align-items: center;
    box-sizing: border-box;
}

.guide-channel-entry.selected {
    background-color: var(--primary-color); /* Use variable */
    color: var(--primary-text-color); /* Use variable */
}

.guide-channel-entry:hover:not(.selected) {
    background-color: #555; /* Slightly darker hover for contrast against transparent background */
}

/* Wrapper for Time Header - used for horizontal sync */
.time-header-scroller {
    flex-shrink: 0;
    overflow-x: hidden; /* Hide scrollbar, controlled by JS sync */
    overflow-y: hidden;
    background: rgba(26, 26, 26, 0.9);
    height: 35px; 
    border-bottom: 1px solid #444;
    position: sticky; /* Make the time header sticky/fixed relative to its parent's scroll */
    top: 0;
    z-index: 20; /* Ensure it floats above the content rows */
}

.guide-content {
    flex-grow: 1;
    overflow-x: scroll; /* Main horizontal scroll control */
    overflow-y: scroll; /* Vertical scroll for rows */
    padding: 0; 
    position: relative; /* Crucial for absolute positioning of indicator line */
    /* Remove padding or margin here */
}

.guide-timeline-row {
    display: flex;
    /* Use enough width for static content (6:00 to 18:00 is 12 hours * 300px/hr = 3600px) */
    min-width: 3600px; 
    border-bottom: 1px solid #444;
    padding: 0;
    height: 50px; /* Matches sidebar entry height */
    position: relative;
}

.guide-program {
    height: 100%;
    background-color: var(--primary-color); /* Use variable */
    color: var(--primary-text-color); /* Use variable */
    border: none;
    margin-right: 5px;
    border-radius: 3px;
    padding: 5px;
    font-size: 0.8em;
    cursor: pointer;
    overflow: hidden;
    white-space: nowrap;
    text-overflow: ellipsis;
    box-sizing: border-box;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Added transitions */
    text-align: left;
    position: absolute; /* Use absolute positioning for offset based on time */
    top: 0;
    display: flex;
    flex-direction: column;
    justify-content: center;
    z-index: 5; /* Ensure programs are above grid lines */
}

.guide-program:hover {
    background-color: var(--primary-color); /* Use variable */
    filter: brightness(0.9);
}

.guide-program-time {
    font-weight: bold;
    font-size: 1.1em;
    line-height: 1;
}

/* Time slots overlay (Header part) */
.time-header {
    flex-shrink: 0;
    background: transparent; /* Background now handled by time-header-scroller */
    border-bottom: none; /* Border now handled by time-header-scroller */
    display: flex;
    /* This width needs to match the min-width of the timeline rows */
    min-width: 3600px; 
    height: 30px;
    padding: 5px 0 0 0;
    box-sizing: border-box;
}

.time-slot {
    width: 150px; /* 30 minutes * 5 pixels/minute = 150px */
    text-align: left;
    padding-left: 5px;
    font-size: 0.8em;
    color: #aaa;
    flex-shrink: 0;
    position: relative;
}

/* New: Live Time Indicator Line */
.time-indicator-line {
    position: absolute;
    top: 0;
    width: 2px;
    height: 100%; /* Spans the entire guide content height */
    background-color: red; /* Highly visible indicator */
    z-index: 10; /* Above programs */
    pointer-events: none; /* Do not interfere with clicks */
}

/* New: Vertical Grid Line */
.guide-vertical-grid-line {
    position: absolute;
    top: 0;
    width: 1px;
    height: 100%; /* Spans the entire guide content height */
    background-color: rgba(255, 255, 255, 0.1); /* Subtle color */
    z-index: 1; /* Below programs */
    pointer-events: none;
}

/* Focus style for guide channels/programs */
.guide-channel-entry.focusable:focus,
.guide-program.focusable:focus {
    outline: 3px solid yellow;
    box-shadow: 0 0 10px yellow;
}

/* Fullscreen Video Player Styles */
#video-container {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: #000;
    z-index: 1000;
    display: flex;
    justify-content: center;
    align-items: center;
}

#video-container.hidden {
    display: none;
}

#tv-player {
    width: 100%;
    height: 100%;
    object-fit: contain; /* Ensures the video fits within the screen */
}

/* Player UI overlay (bottom bar) */
#player-ui {
    position: absolute;
    bottom: 0;
    left: 0;
    width: 100%;
    background: rgba(0, 0, 0, 0.7);
    padding: 10px 20px;
    box-sizing: border-box;
    transition: transform 0.3s ease-out;
    z-index: 1010;
}

#player-ui.hidden {
    transform: translateY(100%); /* Slides down to hide */
    pointer-events: none;
}

.ui-bar {
    display: flex;
    justify-content: space-between;
    align-items: center;
}

#ui-channel-name {
    font-size: 1.1em;
    font-weight: bold;
}

.ui-controls button {
    background-color: #444;
    color: white;
    border: none;
    padding: 8px 15px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9em;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Added transitions */
    margin-left: 5px;
}

.ui-controls button:hover {
    background-color: #555;
}

#ui-rewind-button, #ui-fast-forward-button {
    background-color: #00bcd4; /* Use the primary color for seeking */
    color: #1a1a1a;
    font-weight: bold;
}
#ui-rewind-button:hover, #ui-fast-forward-button:hover {
    background-color: #0097a7;
}

#ui-stop-button {
    background-color: #d32f2f;
}
#ui-stop-button:hover {
    background-color: #c00000;
}

#ui-record-button {
    background-color: #e53935; /* Red for recording */
}

#ui-record-button.recording-pulse {
    animation: pulse 1s infinite;
}

#ui-record-button.stop-recording {
    background-color: #f44336; /* Different red for stop */
}

#ui-guide-button {
    background-color: #ff9800; /* Orange for Guide */
}

@keyframes pulse {
    0% { opacity: 1; }
    50% { opacity: 0.5; }
    100% { opacity: 1; }
}

/* Channel Number Display UI */
#channel-number-display {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-size: 5em;
    color: white;
    background: rgba(0, 0, 0, 0.7);
    padding: 20px 40px;
    border-radius: 10px;
    font-weight: bold;
    z-index: 1020;
    pointer-events: none;
    transition: opacity 0.2s;
}
#channel-number-display.hidden {
    display: none;
}

/* Recordings List */
#recordings-list {
    list-style: none;
    padding: 0;
    margin: 20px 0;
}

#recordings-list li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #2c2c2c;
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 5px;
}

#recordings-list li span {
    flex-grow: 1;
}

.recording-actions button {
    margin-left: 10px;
    padding: 5px 10px;
    font-size: 0.8em;
}

.recording-actions .delete-button {
    background-color: #f44336;
}

.recording-actions .download-button {
    background-color: #4caf50;
}

.recording-actions .play-button {
    background-color: #2196f3;
}

/* Captures List (Reusing styles but adding specific ones if needed) */
#captures-list {
    list-style: none;
    padding: 0;
    margin: 20px 0;
}

#captures-list li {
    display: flex;
    justify-content: space-between;
    align-items: center;
    background-color: #2c2c2c;
    padding: 15px;
    margin-bottom: 10px;
    border-radius: 5px;
}

#captures-list li span {
    flex-grow: 1;
}

.capture-actions button {
    margin-left: 10px;
    padding: 5px 10px;
    font-size: 0.8em;
}

.capture-actions .delete-button {
    background-color: #f44336;
}

.capture-actions .download-button {
    background-color: #4caf50;
}

.capture-actions .view-button {
    background-color: #2196f3;
}

/* Seek Overlay Styles */
#seek-overlay {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 1015; /* Above player UI */
    background: rgba(0, 0, 0, 0.5); /* Slight darkening of background */
    display: flex;
    flex-direction: column;
    justify-content: flex-end; /* Align to the bottom */
    align-items: center;
    padding: 20px;
    box-sizing: border-box;
    pointer-events: none; /* Crucial: Do not block mouse events on video */
}

#seek-overlay.hidden {
    display: none;
}

.seek-preview-container {
    flex-grow: 1;
    display: flex;
    flex-direction: column;
    justify-content: center;
    align-items: center;
    width: 100%;
}

#seek-time {
    font-size: 3em;
    font-weight: bold;
    color: white;
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.8);
    margin-bottom: 20px;
}

#seek-indicator {
    /* Rewind/FF indicator */
    font-size: 5em;
    color: #00bcd4;
    opacity: 0.9;
    text-shadow: 2px 2px 5px rgba(0, 0, 0, 0.8);
    height: 1em; /* Fixed height for consistent vertical spacing */
}

.seek-progress-bar {
    width: 90%;
    max-width: 800px;
    padding: 10px 0;
    display: flex;
    align-items: center;
    justify-content: space-between;
    background: rgba(0, 0, 0, 0.8);
    border-radius: 8px;
    margin-bottom: 50px; /* Lift it slightly above the bottom player bar */
}

#seek-current-time, #seek-live-time {
    padding: 0 10px;
    font-size: 0.9em;
    color: #ccc;
    width: 80px;
    flex-shrink: 0;
    text-align: center;
}

.progress-bar-container {
    flex-grow: 1;
    height: 10px;
    background: #444;
    border-radius: 5px;
    position: relative;
    margin: 0 10px;
}

#progress-buffer {
    position: absolute;
    top: 0;
    left: 0;
    height: 100%;
    background-color: #666;
    border-radius: 5px;
    width: 0%; /* Dynamic width based on buffered content */
}

#progress-live-edge {
    position: absolute;
    right: 0;
    top: -15px;
    color: #ff9800;
    font-size: 0.7em;
    font-weight: bold;
    display: none; /* Only show if we are simulating time travel */
}

#progress-seek-thumb {
    position: absolute;
    top: -5px;
    left: 0;
    transform: translateX(-50%);
    width: 20px;
    height: 20px;
    background-color: var(--primary-color); /* Use variable */
    border-radius: 50%;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    border: 3px solid white;
    transition: transform 0.05s ease-out; /* Smooth movement for seek position */
}

/* Custom Alert Modal Styles */
#custom-alert-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 5000; /* Highest z-index */
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 1;
    transition: opacity 0.3s;
    pointer-events: auto; /* Ensure it captures pointer events */
}

#custom-alert-modal.hidden {
    display: none;
    opacity: 0;
    pointer-events: none;
}

.custom-alert-content {
    background-color: #333;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    max-width: 400px;
    width: 90%;
    text-align: center;
    /* Animation implementation */
    transform: scale(1);
    transition: transform 0.3s ease-out;
}

#custom-alert-modal.hidden .custom-alert-content {
    transform: scale(0.95);
}

#custom-alert-message {
    margin-bottom: 20px;
    font-size: 1.1em;
    color: white;
}

#custom-alert-buttons {
    display: flex;
    justify-content: center;
    gap: 15px;
}

#custom-alert-buttons button {
    background-color: var(--primary-color); /* Use variable */
    color: var(--primary-text-color); /* Use variable */
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1em;
    font-weight: bold;
    transition: background-color 0.2s;
}

#custom-alert-buttons button:hover {
    background-color: var(--primary-color); /* Use variable */
    filter: brightness(0.9);
}

#custom-alert-buttons button.focused {
    outline: 3px solid yellow;
    box-shadow: 0 0 10px yellow;
}

/* --- Recording Status Overlay Styles (New) --- */
#recording-status-overlay {
    position: absolute;
    top: 20px;
    right: 20px;
    z-index: 1020;
    transition: opacity 0.3s;
}

#recording-status-overlay.hidden {
    opacity: 0;
    display: none;
}

.recording-status-content {
    background-color: rgba(0, 0, 0, 0.9); /* Changed from Dark Red to Black */
    color: white;
    padding: 10px 15px;
    border-radius: 8px;
    display: flex;
    align-items: center;
    gap: 15px;
    box-shadow: 0 2px 10px rgba(0, 0, 0, 0.5);
}

.recording-indicator {
    display: flex;
    align-items: center;
    font-weight: bold;
}

.red-dot {
    width: 10px;
    height: 10px;
    background-color: red;
    border-radius: 50%;
    margin-right: 8px;
    animation: pulse 1s infinite;
}

.status-text {
    font-size: 1em;
}

#recording-timestamp {
    font-size: 1.1em;
    font-weight: bold;
}

.recording-controls button {
    background-color: rgba(0, 0, 0, 0.3);
    color: white;
    border: 1px solid white;
    padding: calc(5px * var(--scale-factor)) calc(10px * var(--scale-factor));
    border-radius: 4px;
    cursor: pointer;
    font-size: 0.9em;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Ensure transition exists */
}
.recording-controls button:hover {
    background-color: rgba(0, 0, 0, 0.5);
}
#ui-record-pause.paused {
    background-color: #ff9800; /* Orange when paused */
    color: #1a1a1a;
    font-weight: bold;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Ensure transition exists */
}

/* New Progress Bar style for Finalization */
.finalizing-progress-bar {
    width: 200px;
    height: 10px;
    background-color: #444;
    border-radius: 5px;
    margin-left: 15px;
}

.finalizing-progress-bar-fill {
    height: 100%;
    background-color: var(--primary-color); /* Use variable */
    border-radius: 5px;
    width: 0%;
    transition: width 0.1s linear;
}

.finalizing-text {
    font-weight: bold;
    color: var(--primary-color); /* Use variable */
}

/* Settings View Styles */
.settings-section {
    background-color: #2c2c2c;
    padding: calc(20px * var(--scale-factor));
    margin-bottom: calc(20px * var(--scale-factor));
    border-radius: 5px;
}

.settings-section .setting-group {
    display: flex;
    flex-wrap: wrap;
    align-items: center;
    gap: 10px;
    margin-bottom: 15px;
    padding: 10px;
    border: 1px solid #444;
    border-radius: 4px;
}

.settings-section .setting-group label {
    flex-basis: 100%; /* Make labels full width */
    margin-bottom: 5px;
    font-weight: bold;
}

.settings-section .setting-group input[type="color"] {
    width: 60px;
    height: 30px;
    padding: 0;
    border: none;
    cursor: pointer;
    /* Ensure color input border respects focus style */
}

.settings-section .setting-group input[type="range"] {
    flex-grow: 1;
    margin-right: 10px;
}

/* Simulate Caption Display Style (for demonstration) */
#tv-player::cue {
    /* Set all derived style properties with !important to ensure they override browser defaults */
    color: var(--caption-text-color) !important;
    /* Use var(--caption-bg-color) which is set as RGBA in app.js */
    background-color: var(--caption-bg-color) !important; 
    font-family: var(--caption-font-family) !important;
    /* Note: Text opacity variable is often unreliable on ::cue directly, 
       but we keep it for potential browser support. */
    opacity: var(--caption-text-opacity) !important; 
    text-shadow: var(--caption-text-shadow) !important;
    font-size: var(--caption-font-size) !important; /* NEW Size */
    /* Try to force default alignment attributes to enable position changes (though position is often player controlled) */
    align-items: var(--caption-position-vertical) !important;
    text-align: center !important;
    /* Ensure line height does not interfere with font size */
    line-height: 1.2 !important; 
    
    /* Ensure background is correctly rendered, some browsers prefer background over background-color for alpha channel */
    background: var(--caption-bg-color) !important; /* Use both background and background-color */
}

/* Ensure font color is consistent even when opacity is low on the cue container */
#tv-player::cue-text {
    color: var(--caption-text-color) !important;
    /* Opacity is applied to the entire cue box, not just text */
}

/* If using a custom caption layer, we would use --caption-position-vertical for positioning. 
   For example, if we had a div wrapper around the captions:
   
   .caption-wrapper {
       position: absolute;
       bottom: 0;
       left: 50%;
       transform: translateX(-50%);
       display: flex;
       justify-content: center;
       align-items: var(--caption-position-vertical);
   }
*/

/* --- Notification Popup Styles (New) --- */
#notification-popup {
    position: fixed;
    top: 20px;
    left: 20px;
    background-color: var(--primary-color); /* Use variable */
    color: var(--primary-text-color); /* Use variable */
    padding: 15px 25px;
    border-radius: 8px;
    box-shadow: 0 4px 12px rgba(0, 0, 0, 0.4);
    z-index: 6000; /* Highest priority */
    min-width: 250px;
    pointer-events: none; /* Cannot be clicked */
    opacity: 1;
    transition: transform 0.4s ease-out, opacity 0.4s ease-out;
}

/* Initial state (hidden outside of the viewport) */
#notification-popup.notification-hidden {
    transform: translateX(calc(-100% - 20px)); /* Slide out completely to the left */
    opacity: 0;
}

/* Show animation (Slide right in) */
@keyframes slide-in-right {
    from {
        transform: translateX(calc(-100% - 20px));
        opacity: 0.5;
    }
    to {
        transform: translateX(0);
        opacity: 1;
    }
}

/* Hide animation (Slide left out) */
@keyframes slide-out-left {
    from {
        transform: translateX(0);
        opacity: 1;
    }
    to {
        transform: translateX(calc(-100% - 20px));
        opacity: 0;
    }
}

#notification-popup.notification-visible {
    animation: slide-in-right 0.4s ease-out forwards;
}

#notification-popup.notification-hiding {
    animation: slide-out-left 0.4s ease-in forwards;
}

/* Experimental Light Theme Styles */
body.light-theme {
    background-color: #f0f0f0;
    color: #1a1a1a;
}

body.light-theme header {
    background-color: #ccc;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.2);
}

body.light-theme h1 {
    color: #1e88e5; /* Blue - keep fixed for light theme accent */
}

body.light-theme .nav-button {
    background-color: #ddd;
    color: #1a1a1a;
}

body.light-theme .nav-button.active {
    background-color: #1e88e5; /* Keep fixed for light theme */
    color: white;
}

body.light-theme .channel-button {
    background-color: #1e88e5; /* Keep fixed for light theme */
    color: white;
}

body.light-theme .channel-button:hover {
    background-color: #1565c0;
}

body.light-theme .settings-section, 
body.light-theme #recordings-list li,
body.light-theme #captures-list li {
    background-color: #fff;
    border: 1px solid #ddd;
    color: #1a1a1a;
}

body.light-theme .settings-section h3 {
    color: #1e88e5;
}

/* Light Theme overrides for Chooser/Picker */
body.light-theme #main-content select, 
body.light-theme #main-content input[type="text"], 
body.light-theme #main-content input[type="number"],
body.light-theme #main-content input[type="range"] {
    background-color: #eee;
    color: #1a1a1a;
    border: 1px solid #ccc;
}

body.light-theme #main-content select:hover, 
body.light-theme #main-content input[type="text"]:hover, 
body.light-theme #main-content input[type="number"]:hover {
    background-color: #ddd;
    border-color: #1e88e5;
}
body.light-theme #main-content select {
    /* Update custom caret color for light theme */
    background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 20'%3E%3Cpath fill='%231a1a1a' d='M9.293 12.95l.707.707L15.657 8l-1.414-1.414L10 10.828 5.757 6.586 4.343 8z'/%3E%3C/svg%3E");
}

/* --- P2P Transfer Modal Styles (New) --- */
#p2p-transfer-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.9);
    z-index: 4900; 
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
}
#p2p-transfer-modal:not(.hidden) {
    opacity: 1;
    pointer-events: auto;
}

.transfer-content {
    background-color: #222;
    padding: 40px;
    border-radius: 10px;
    box-shadow: 0 0 30px rgba(0, 0, 0, 0.7);
    max-width: 500px;
    width: 90%;
    color: white;
    position: relative;
    /* Animation */
    transform: translateY(0);
    transition: transform 0.4s ease-out, opacity 0.4s ease-out;
}

#p2p-transfer-modal.hidden .transfer-content {
    transform: translateY(-20px);
    opacity: 0;
}

.transfer-content h3, .transfer-content h4 {
    color: var(--primary-color); /* Use variable */
    text-align: center;
}

.transfer-content .close-button {
    position: absolute;
    top: 10px;
    right: 10px;
    background: none;
    border: none;
    color: white;
    font-size: 1.2em;
    cursor: pointer;
}

#transfer-mode-selection {
    display: flex;
    justify-content: center;
    gap: 10px;
    margin: 20px 0;
}

#transfer-mode-selection button {
    background-color: #555;
    padding: 10px 20px;
    border: none;
    border-radius: 5px;
    color: white;
    font-size: 1em;
    cursor: pointer;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Added transitions */
}

#transfer-mode-selection button:hover {
    background-color: #777;
}

#transfer-content-select, #transfer-code-input {
    width: 100%;
    padding: 10px;
    margin: 10px 0 20px 0;
    border-radius: 5px;
    border: 1px solid #444;
    background-color: #333;
    color: white;
    box-sizing: border-box;
    font-size: 1em;
}

#transfer-code-display {
    text-align: center;
    font-size: 1.5em;
    font-weight: bold;
    color: #4caf50;
    padding: 10px;
    background: #333;
    border-radius: 5px;
    margin-top: 15px;
}
#sharing-code {
    letter-spacing: 5px;
}

#transfer-generate-code, #transfer-start-receive {
    background-color: var(--primary-color); /* Use variable */
    color: var(--primary-text-color); /* Use variable */
    width: 100%;
    padding: 12px;
    border-radius: 5px;
    font-size: 1.1em;
    font-weight: bold;
    margin-bottom: 10px;
    transition: background-color 0.2s, transform 0.1s, box-shadow 0.1s; /* Added transitions */
}

#transfer-start-receive:hover, #transfer-generate-code:hover {
    background-color: var(--primary-color); /* Use variable */
    filter: brightness(0.9);
}

/* --- Custom Color Picker Styles (NEW) --- */
#color-picker-modal {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background-color: rgba(0, 0, 0, 0.8);
    z-index: 5500;
    display: flex;
    justify-content: center;
    align-items: center;
    opacity: 0;
    transition: opacity 0.3s;
    pointer-events: none;
}
#color-picker-modal:not(.hidden) {
    opacity: 1;
    pointer-events: auto;
}

.color-picker-content {
    background-color: #333;
    padding: 30px;
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 0, 0, 0.5);
    max-width: 400px;
    width: 90%;
    text-align: center;
    position: relative;
    transform: scale(1);
    transition: transform 0.3s ease-out;
    border: 3px solid var(--primary-color); /* Added style */
}

#color-picker-modal.hidden .color-picker-content {
    transform: scale(0.95);
}

#html-color-input {
    width: 100%;
    height: 50px;
    margin: 15px 0;
    border: 3px solid #ccc; /* Added border */
    background: none;
    padding: 0;
    cursor: pointer;
    border-radius: 5px; /* Added border radius */
    overflow: hidden; /* Ensure color swatch fits */
}

#color-swatches {
    display: flex;
    justify-content: space-around;
    margin: 20px 0;
}

.color-swatch {
    width: 40px;
    height: 40px;
    border-radius: 50%;
    cursor: pointer;
    border: 3px solid white;
    box-shadow: 0 0 5px rgba(0, 0, 0, 0.5);
    transition: transform 0.1s, box-shadow 0.1s;
    flex-shrink: 0; /* Prevent squishing */
}

.color-swatch:hover {
    transform: scale(1.1);
}

.color-swatch.focusable:focus,
.color-swatch.selected {
    outline: 3px solid yellow;
    box-shadow: 0 0 10px yellow;
    transform: scale(1.1);
}

#apply-color-button {
    background-color: #4caf50;
    color: white;
    border: none;
    padding: 10px 20px;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1em;
    font-weight: bold;
    width: 100%;
}

/* Ensure Light Theme updates button color on body.light-theme */
body.light-theme .color-picker-content {
    background-color: #f0f0f0;
    border-color: #1e88e5;
    color: #1a1a1a;
}

body.light-theme .color-picker-content h3, 
body.light-theme .color-picker-content p {
    color: #1a1a1a;
}

body.light-theme .color-picker-content .close-button {
    color: #1a1a1a;
}

body.light-theme #transfer-content-select, 
body.light-theme #transfer-code-input {
    background-color: #fff;
    color: #1a1a1a;
    border: 1px solid #ddd;
}

/* --- Language Flag Styles --- */
.flag-icon {
    width: 24px;
    height: 16px;
    vertical-align: middle;
    margin-right: 8px;
    border: 1px solid #ccc;
}